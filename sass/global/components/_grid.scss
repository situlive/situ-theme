@use "sass:math";

@include media-breakpoint-up(sm) {
  .thinnest-gutters.row:not(.no-gutters) {
    margin-left: math.div($grid-gutter-width-lg, 40) * -1 !important;
    margin-right: math.div($grid-gutter-width-lg, 40) * -1 !important;

    > .col:not(.no-gutters),
    > [class*="col-"]:not(.no-gutters) {
      padding-left: math.div($grid-gutter-width-lg, 40) !important;
      padding-right: math.div($grid-gutter-width-lg, 40) !important;
    }
  }
}

@include media-breakpoint-up(lg) {
  .container,
  .container-fluid {
    padding-left: math.div($grid-gutter-width-md, 2);
    padding-right: math.div($grid-gutter-width-md, 2);

    > .row:not(.no-gutters) {
      margin-left: math.div($grid-gutter-width-md, 2) * -1;
      margin-right: math.div($grid-gutter-width-md, 2) * -1;

      > .col:not(.no-gutters),
      > [class*="col-"]:not(.no-gutters) {
        padding-left: math.div($grid-gutter-width-md, 2);
        padding-right: math.div($grid-gutter-width-md, 2);
      }
    }
  }

  form .container,
  form .container-fluid {
    padding-left: math.div($grid-gutter-width, 2);
    padding-right: math.div($grid-gutter-width, 2);

    > .row:not(.no-gutters) {
      margin-left: math.div($grid-gutter-width, 2) * -1;
      margin-right: math.div($grid-gutter-width, 2) * -1;

      > .col:not(.no-gutters),
      > [class*="col-"]:not(.no-gutters) {
        padding-left: math.div($grid-gutter-width, 2);
        padding-right: math.div($grid-gutter-width, 2);
      }
    }
  }

  .thin-gutters.row:not(.no-gutters) {
    margin-left: math.div($grid-gutter-width-lg, 4) * -1 !important;
    margin-right: math.div($grid-gutter-width-lg, 4) * -1 !important;

    > .col:not(.no-gutters),
    > [class*="col-"]:not(.no-gutters) {
      padding-left: math.div($grid-gutter-width-lg, 4) !important;
      padding-right: math.div($grid-gutter-width-lg, 4) !important;
    }
  }

  .ultra-thin-gutters.row:not(.no-gutters) {
    margin-left: math.div($grid-gutter-width-lg, 8) * -1 !important;
    margin-right: math.div($grid-gutter-width-lg, 8) * -1 !important;

    > .col:not(.no-gutters),
    > [class*="col-"]:not(.no-gutters) {
      padding-left: math.div($grid-gutter-width-lg, 8) !important;
      padding-right: math.div($grid-gutter-width-lg, 8) !important;
    }
  }
}

@include media-breakpoint-up(xxl) {
  .container,
  .container-fluid {
    padding-left: math.div($grid-gutter-width-lg, 2);
    padding-right: math.div($grid-gutter-width-lg, 2);

    > .row:not(.no-gutters) {
      margin-left: math.div($grid-gutter-width-lg, 2) * -1;
      margin-right: math.div($grid-gutter-width-lg, 2) * -1;

      > .col:not(.no-gutters),
      > [class*="col-"]:not(.no-gutters) {
        padding-left: math.div($grid-gutter-width-lg, 2);
        padding-right: math.div($grid-gutter-width-lg, 2);
      }
    }
  }
}